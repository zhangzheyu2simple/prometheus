// Copyright 2017 Prometheus Team
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package prometheus;

option go_package = "prompb";

import "types.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "gogoproto/gogo.proto";

message Matrix {
  repeated prometheus.TimeSeries series = 1;
}
message Vector{
  repeated LabeledSample samples=1;
}
message LabeledSample{
  prometheus.Sample point=1 [(gogoproto.nullable) = false];
  repeated prometheus.Label Labels=2 [(gogoproto.nullable) = false];

}
message RangeQueryRequest{
    google.protobuf.Timestamp start = 1 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp end = 2 [(gogoproto.stdtime) = true];
    google.protobuf.Duration step=3 [(gogoproto.stdduration) = true];
    string query =4;
}
message RangeQueryResponse{
    string vaule_type = 1  ;  
    Matrix matrix =2;
}
message InstantQueryRequest{
    google.protobuf.Timestamp time_stamp = 1 [(gogoproto.stdtime) = true];
    string query =2;
}
message InstantQueryResponse{
    string vaule_type = 1  ;  
    Matrix matrix =2;
    Vector vector=3;
}
service Api {
  // Snapshot creates a snapshot of all current data into 'snapshots/<datetime>-<rand>' under the TSDB's data directory.
  rpc RangeQuery(RangeQueryRequest) returns (RangeQueryResponse) {}
  rpc InstantQuery(InstantQueryRequest) returns(InstantQueryResponse){}
}



